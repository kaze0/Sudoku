/* 
 * Copyright (C) 2009 Roman Masek
 * 
 * This file is part of OpenSudoku.
 * 
 * OpenSudoku is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * OpenSudoku is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with OpenSudoku.  If not, see <http://www.gnu.org/licenses/>.
 * 
 */

package com.mikedg.android.sudoku.db;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;
import cz.romario.opensudoku.R;
import cz.romario.opensudoku.db.FolderColumns;
import cz.romario.opensudoku.db.SudokuColumns;
import cz.romario.opensudoku.game.SudokuGame;

/**
 * This class helps open, create, and upgrade the database file.
 */
public class DatabaseHelper extends SQLiteOpenHelper {

	private static final String TAG = "DatabaseHelper";
	
	public static final int DATABASE_VERSION = 8;
	
	private Context mContext;
	
    DatabaseHelper(Context context) {
        super(context, SudokuDatabase.DATABASE_NAME, null, DATABASE_VERSION);
        this.mContext = context;
    }

    @Override
    public void onCreate(SQLiteDatabase db) {
        db.execSQL("CREATE TABLE " + SudokuDatabase.SUDOKU_TABLE_NAME + " ("
                + SudokuColumns._ID + " INTEGER PRIMARY KEY,"
                + SudokuColumns.FOLDER_ID + " INTEGER,"
                + SudokuColumns.CREATED + " INTEGER,"
                + SudokuColumns.STATE + " INTEGER,"
                + SudokuColumns.TIME + " INTEGER,"
                + SudokuColumns.LAST_PLAYED + " INTEGER,"
                + SudokuColumns.DATA + " Text,"
                + SudokuColumns.PUZZLE_NOTE + " Text"
                + ");");
        
        db.execSQL("CREATE TABLE " + SudokuDatabase.FOLDER_TABLE_NAME + " ("
                + FolderColumns._ID + " INTEGER PRIMARY KEY,"
                + SudokuColumns.CREATED + " INTEGER,"
                + FolderColumns.NAME + " TEXT"
                + ");");
        
        insertFolder(db,1,mContext.getString(R.string.difficulty_easy));
      
        insertSudoku(db,1,1,"Easy1","079001000650900002042503790200000100095102380008000004026308940400009061000600250");
        insertSudoku(db,1,2,"Easy2","079400600600007010000563098200005070795000386010700004520318000030200001001004250");
        insertSudoku(db,1,3,"Easy3","809000035053087412002000000200005000095102380000700004000000900437250860980000203");
        insertSudoku(db,1,4,"Easy4","908000002000070510030604009060010070807060305050030090600203050024080000700000204");
        insertSudoku(db,1,5,"Easy5","070051040206970503030020709300000400017409320002000006601040050504086901080190060");
        insertSudoku(db,1,6,"Easy6","070050640006070503030600709009002400010409020002800100601003050504080900083090060");
        insertSudoku(db,1,7,"Easy7","908000640206908500005600709060010008017469320400030090601003800004706901083000204");
        insertSudoku(db,1,8,"Easy8","900051000006008513035620780369000000007469300000000196091043850524700900000190004");
        insertSudoku(db,1,9,"Easy9","290007008008600070000458006000060594604000102932040000300784000070006200400100083");
        insertSudoku(db,1,10,"Easy10","006310050008002001003408000187003004054000130900500867000704600800900200060025700");
        insertSudoku(db,1,11,"Easy11","290000000540002071000408906000263504000809000902541000305704000870900045000000083");
        insertSudoku(db,1,12,"Easy12","006007000540602071700458000180200590650000032032001067000784009870906045000100700");
        insertSudoku(db,1,13,"Easy13","006017400508002071003408900000260094054809130930041000005704600870900205009120700");
        insertSudoku(db,1,14,"Easy14","028400501904008030670002000003090806080000010106080900000900053090800704402005680");
        insertSudoku(db,1,15,"Easy15","028409000004650200000000098243001070700000005050300942860000000001063700000705680");
        insertSudoku(db,1,16,"Easy16","000009560910658000070032498000090870000206000056080000867920050000863024032700000");
        insertSudoku(db,1,17,"Easy17","308000500900658230670100000203090076089040310150080902000004053091863004002000609");
        insertSudoku(db,1,18,"Easy18","031004000600703005570092300758000103000000000203000674005670018100408007000200590");
        insertSudoku(db,1,19,"Easy19","001004780002710905570000300050906103006327800203105070005000018109058200047200500");
        insertSudoku(db,1,20,"Easy20","901504780682003005000000060700906100006020800003105004020000000100400237047201506");
        insertSudoku(db,1,21,"Easy21","931504080600700000000890061058000020400020009090000670320079000000008007040201596");
        insertSudoku(db,1,22,"Easy22","030004782000003905500802300750900020006000800090005074005609008109400000847200090");
        insertSudoku(db,1,23,"Easy23","004003078068040030003807009490000700071206850005000093500601300030070980840900100");
        insertSudoku(db,1,24,"Easy24","900023608000009500000800019002058701301000804605710200520001000006400000807930006");
        insertSudoku(db,1,25,"Easy25","910500600700140532050800009402000061000090000680000203500001040136072005007005026");
        insertSudoku(db,1,26,"Easy26","050120004420803006813060000000040205009302700602070000000080372700209041200031080");
        insertSudoku(db,1,27,"Easy27","950100804027890000800564007070008095009000700680900010100486002000059640204001089");
        insertSudoku(db,1,28,"Easy28","056100800000890006013564007070040090049302760080070010100486370700059000004001580");
        insertSudoku(db,1,29,"Easy29","056100830427000106010004007300008090049000760080900003100400070708000641064001580");
        insertSudoku(db,1,30,"Easy30","056120834007000006810560020000008200040312060002900000090086072700000600264031580");
       // MEDIUM
        insertFolder(db,2,mContext.getString(R.string.difficulty_medium));
        insertSudoku(db,2,31,"Medium1","786001054900670080300008790090000500000702000002000060039800005050026008270400619");
        insertSudoku(db,2,32,"Medium2","000700036026003407107000000000320700092050640003076000000000809904100360280009000");
        insertSudoku(db,2,33,"Medium3","094250000600784200070009040020007103500602008708500020060300080005928004000076530");
        insertSudoku(db,2,34,"Medium4","090050807650004000002009040026000153001000700738000420060300900000900074209070030");
        insertSudoku(db,2,35,"Medium5","012300000740820000089000000900206500200070004007104006000000750000048039000002480");
        insertSudoku(db,2,36,"Medium6","001735000005006000890020050700010036000543000580070001010090065000300800000168700");
        insertSudoku(db,2,37,"Medium7","040005008000080074890001603700810030069000280080072001408200065970050000300100040");
        insertSudoku(db,2,38,"Medium8","000500003000780605750300029000097800416050397009430000180003072203078000600005000");
        insertSudoku(db,2,39,"Medium9","000900076090000105610058000340087010200306007070490023000870064802000090760009000");
        insertSudoku(db,2,40,"Medium10","075000048000205000100000935807000390000736000056000102569000003000103000710000420");
        insertSudoku(db,2,41,"Medium11","500006249004000600209005038100300500008090300002008001920800706006000400341600002");
        insertSudoku(db,2,42,"Medium12","205003060900054001410000050000060740002907500087030000020000076800370009030200405");
        insertSudoku(db,2,43,"Medium13","270000864000000000403620000090502708040907010507401090000045306000000000736000085");
        insertSudoku(db,2,44,"Medium14","000090000900004201410600057000560740042000510087031000120005076804300009000010000");
        insertSudoku(db,2,45,"Medium15","520400030714000000008095002001800520300000006075004300100560200000000659050003087");
        insertSudoku(db,2,46,"Medium16","100387200700500030500620100050470300070000080004035090007054003060008005005763002");
        insertSudoku(db,2,47,"Medium17","608035400000001786200006000730860000001000800000074053000300009183200000002650108");
        insertSudoku(db,2,48,"Medium18","800003002697182030000070000001000057045701890780000300000010000060357148500400003");
        insertSudoku(db,2,49,"Medium19","000093710090080034002070600001030407005701800706040300003010900260050040018460000");
        insertSudoku(db,2,50,"Medium20","000070460000185090000900800576009080300507006040600753004006000080753000023040000");
        insertSudoku(db,2,51,"Medium21","801070065067080300030900010570000001008020900900000053050006030009050620620040509");
        insertSudoku(db,2,52,"Medium22","020609050040035800500000300030070005087453290400080070003000002004710030060304010");
        insertSudoku(db,2,53,"Medium23","104900800000200061037100002006040007015392640400010900500003170370001000001009506");
        insertSudoku(db,2,54,"Medium24","059020007600150480100080000000074036003201800480530000000040001094012008200060940");
        insertSudoku(db,2,55,"Medium25","057010800002900000930805000309042010200000003060530204000301029000007300003020760");
        insertSudoku(db,2,56,"Medium26","090186005004000100600090080200900034008605700910004006040050008009000400100248050");
        insertSudoku(db,2,57,"Medium27","000021635000007010002563000064000070095000380010000520000318900030200000981670000");
        insertSudoku(db,2,58,"Medium28","020000060900658000670102400000001870009000300056300000007904053000863004030000080");
        insertSudoku(db,2,59,"Medium29","000500678768000002200067400402050760000000000085010203009680007100000985847005000");
        insertSudoku(db,2,60,"Medium30","014003008000009032250800019000008061071000850680700000520001047130400000800900120");
        //HARD
        insertFolder(db,3,mContext.getString(R.string.difficulty_hard));
        insertSudoku(db,3,61,"Hard1","200300800014680000708002000800960704006000900109078005000100508000026170001003006");
        insertSudoku(db,3,62,"Hard2","103069004076000010080000090030600940001904300029008060010000030090000850800310609");
        insertSudoku(db,3,63,"Hard3","400070650000400708007250314000540200040000030005083000684012500301005000052060003");
        insertSudoku(db,3,64,"Hard4","020003908900006150040000706087001009090040070400200810604000080032700001709100060");
        insertSudoku(db,3,65,"Hard5","600900403200136000000000960000010859020805030538070000054000000000581004802003006");
        insertSudoku(db,3,66,"Hard6","300020040600007100540300009800295000015000230000813005100008067006100002090030004");
        insertSudoku(db,3,67,"Hard7","007030580100040006004907000098000060312604897050000340000402700200070009071090400");
        insertSudoku(db,3,68,"Hard8","560002007004005000000630000690004302080203040402900078000028000000400700300100086");
        insertSudoku(db,3,69,"Hard9","000001000207800004900030506710003090403000708090500043104050002500004301000200000");
        insertSudoku(db,3,70,"Hard10","060901007037860004000030500010000600053090720002000040004050000500084370300207050");
        insertSudoku(db,3,71,"Hard11","500090060009802307007600090074000603000423000803000420040009200108205700020080005");
        insertSudoku(db,3,72,"Hard12","503060000700409063040000100102006080060502010030900604004000090690803002000090801");
        insertSudoku(db,3,73,"Hard13","090003420704020001062710000009007308040000070607300100000071250900050706075800010");
        insertSudoku(db,3,74,"Hard14","010429800030000006009003170080047903000000000307290050025100300100000080008934020");
        insertSudoku(db,3,75,"Hard15","000900405900006007003504080016470809000000000408069710080702500500600008102005000");
        insertSudoku(db,3,76,"Hard16","370000000100350000052014000089460370030000090061039250000190830000078005000000029");
        insertSudoku(db,3,77,"Hard17","740001050009364807000005200001846002400000001800517300004100000907452100010600095");
        insertSudoku(db,3,78,"Hard18","602750004000003009180900000501430007000607000300085401000004078800500000400078903");
        insertSudoku(db,3,79,"Hard19","800500000170300906000006005032000001068401590900000480200700000607003019000002008");
        insertSudoku(db,3,80,"Hard20","001048007000090684800007310090010000002869100000070020035200006726050000100730500");
        insertSudoku(db,3,81,"Hard21","040730800000500049000402003150000000792805364000000017800204000920008000007053090");
        insertSudoku(db,3,82,"Hard22","000008903070060108003000060090602470007040800054107030030000600506090080409500000");
        insertSudoku(db,3,83,"Hard23","090002075568700300070300008050213780000000000027685010900008060005007849780400030");
        insertSudoku(db,3,84,"Hard24","400125079000040012020000800300400000907050106000003004003000050280030000510786003");
        insertSudoku(db,3,85,"Hard25","305000006080903020900075003000659080008030700090728000800390004010207030400000207");
        insertSudoku(db,3,86,"Hard26","200080061300426090096500000000000430100604008034000000000007520060358004750040003");
        insertSudoku(db,3,87,"Hard27","000850040000007500000120083070018059005000400810490020640083000009500000050062000");
        insertSudoku(db,3,88,"Hard28","042090308001070040700630002000560720000302000026047000100023007090050800405080260");
        insertSudoku(db,3,89,"Hard29","005007000029000001000041080900008025201000408680200009090680000300000860000100200");
        insertSudoku(db,3,90,"Hard30","000020036820560700000041002003010005001090400600070300400680000002059064560030000");
        
        insertFolder(db,4,mContext.getString(R.string.folder_daily));
        //FIXME: insert a few here! so it's not blank!
        
        createIndexes(db);
    }
    
    private void insertFolder(SQLiteDatabase db, long folderID, String folderName) {
    	long now = System.currentTimeMillis();
    	db.execSQL("INSERT INTO " + SudokuDatabase.FOLDER_TABLE_NAME + " VALUES ("+ folderID + ", " + now + ", '" + folderName + "');");
    }
    
    // TODO: sudokuName is not used
    private void insertSudoku(SQLiteDatabase db, long folderID, long sudokuID, String sudokuName, String data) {
    	String sql = "INSERT INTO " + SudokuDatabase.SUDOKU_TABLE_NAME + " VALUES ("+sudokuID+", "+ folderID + ", 0, " + SudokuGame.GAME_STATE_NOT_STARTED + ", 0, null, '"+ data + "', null);";
    	db.execSQL(sql);
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        Log.i(TAG, "Upgrading database from version " + oldVersion + " to "
                + newVersion + ".");
        
        createIndexes(db);
    }
    
    private void createIndexes(SQLiteDatabase db) {
    	db.execSQL("create index "+SudokuDatabase.SUDOKU_TABLE_NAME+
     		   "_idx1 on "+
     		   SudokuDatabase.SUDOKU_TABLE_NAME+" ("+SudokuColumns.FOLDER_ID+");");    	
    }
}
